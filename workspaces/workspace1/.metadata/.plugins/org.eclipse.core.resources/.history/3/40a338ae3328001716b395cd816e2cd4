

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.CookieHandler;
import java.net.CookieManager;
import java.net.CookiePolicy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.net.ssl.TrustManager;
import javax.net.ssl.TrustManagerFactory;
import javax.net.ssl.X509TrustManager;
import javax.security.cert.Certificate;



public abstract class AbstractScrapper {
	public HttpClient getNewHttpClient() {
	    try {
	        KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
	        trustStore.load(null, null);

	        MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
	        sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);

	        HttpParams params = new BasicHttpParams();
	        HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
	        HttpProtocolParams.setContentCharset(params, HTTP.UTF_8);

	        SchemeRegistry registry = new SchemeRegistry();
	        registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
	        registry.register(new Scheme("https", sf, 443));

	        ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);

	        return new DefaultHttpClient(ccm, params);
	    } catch (Exception e) {
	        return new DefaultHttpClient();
	    }
	}
	public static String getPage(String finalUrl) throws MalformedURLException {
			initCookieHandler();
	
			URLConnection connection;
			InputStream detResponse = null;
			boolean successfull=false;
			int timeOut=1000;
			InputStreamReader inputStreamReader = null;
			while(!successfull){
				try {
					URL url = new URL(finalUrl);
					connection = url.openConnection();
					
					connection.setConnectTimeout(1000000);
					connection.setRequestProperty("Accept-Charset", "UTF-8");
					//argh
					connection.connect();
					detResponse = connection.getInputStream();
					
					successfull=true;
				
			
					inputStreamReader = new InputStreamReader(detResponse,java.nio.charset.StandardCharsets.UTF_8.toString());
				} catch (IOException e) {
					System.out.println("There was a problem with accessing url '"+finalUrl+"' exception: "+e.getMessage());
					
					//e.printStackTrace();
				}
			}
			
			
			BufferedReader detBR=new BufferedReader(inputStreamReader);
			
			String respLine=null;
	//			detResponse.
			StringBuilder response=new StringBuilder();
			try {
				while((respLine=detBR.readLine())!=null){
					response.append(respLine);
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return response.toString();
		}

	public static void initCookieHandler() {
		if(CookieHandler.getDefault()==null){
			CookieHandler.setDefault(new CookieManager(null, CookiePolicy.ACCEPT_ALL));
		}
	}
	
	
	public static void main(String arg[]) throws MalformedURLException, NoSuchAlgorithmException, KeyStoreException{
		System.setProperty("javax.net.ssl.trustStore","C:\\Program Files\\Java\\jre1.8.0_77\\lib\\security\\cacerts");
		TrustManagerFactory trustManagerFactory =
				   TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
				
				trustManagerFactory.init((KeyStore)null);
				int count=0;
				
				System.out.println(trustManagerFactory.getProvider());
				TrustManager[] tmList=trustManagerFactory.getTrustManagers(); 
				for(int i=0;i<tmList.length;i++){
					
					X509TrustManager tman=(X509TrustManager)tmList[i];
					for(X509Certificate cert: tman.getAcceptedIssuers()){
						count+=1;
						System.out.println("NEXT:\n"+cert.getIssuerDN()+"\n\n\n\n\n");
					}
				}
				System.out.println(count);
//				).stream().forEach(t -> {
//				                    x509Certificates.addAll(Arrays.asList(((X509TrustManager)t).getAcceptedIssuers()));
//				                });
		
		String x="https://przepisy.pl/przepis/crespelle-czyli-zapiekane-nalesniki-z-gorgonzola-i-cukinia";
		
		String z=getPage(x);
		System.out.println(z);
	}

}
